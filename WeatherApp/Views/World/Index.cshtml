@using Newtonsoft.Json
@model System.String[]
@{
    ViewBag.Title = "Index";
}

@section styles
{
    <style>
        .custom {
            width: 360px;
            height: 192px;
        }
    </style>
}

<h2>World Weather Page</h2>
<h3>Choose country and city to know weather</h3>

<div class="container-fluid row">
<div class="form-horizontal col-md-6">
    <div class="form-group">
        <label class="control-label col-md-3">Country</label>
        <div class="col-md-10">
            <select class="custom-select" name="Country" data-bind="options: countries,
                    value: selectedCountry, event: {change: getCities}">

            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3">City</label>
        <div class="col-md-10">
            <select class="custom-select" name="Country" data-bind="options: cities, value: selectedCity"></select>
        </div>
    </div>
    <input value="Weather Info" class="form-group btn btn-primary" type="submit" data-bind="click: $root.getInfo" style="margin-left: 15px"/>
</div>
    <img class="col-md-4" data-bind="attr: { src: cityImgURL},css: cityImgURL() !== null ? 'custom' : ''"/>
</div>
    <div id="success" style="margin-top: 15px; color:blue;font-style: italic" data-bind="text: weatherInfo"></div>
    <div id="error" style="color: red" data-bind="text: error"></div>
    <img class="rounded mx-auto d-block" data-bind="attr:{src: urlImage}" />

@section scripts
{
    <script src="~/Scripts/knockout-3.5.0.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function() {
            function CountriesViewModel() {
                var self = this;
                self.countries = ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(Model)));
                self.cities = ko.observableArray(["Brest","Hrodna","Mahilyow","Minsk"]);
                self.currentCountry = ko.observable();
                self.selectedCountry = ko.observable(self.countries()[0]);
                self.selectedCity = ko.observable(self.cities()[0])
                self.city = ko.observable('');
                self.temp = ko.observable('');
                self.wind = ko.observable('');
                self.pressure = ko.observable('');
                self.urlImage = ko.observable('');
                self.weatherInfo = ko.observable('');
                self.error = ko.observable('');
                self.urlImage = ko.observable('');
                self.cityImgURL = ko.observable('https://www.studapart.com/sites/default/files/styles/large_16_9/public/2018-06/brest.jpg?itok=od_eoW_P')

                self.getCities = function () {
                    self.cities([]);
                    self.error('');
                    $.ajax({
                        url: "/World/GetAllCities?country="+self.selectedCountry(),
                        type: 'GET',
                        success: function(response) {
                            for (var r in response) {
                                self.cities.push(response[r]);
                            }
                        }
                    });
                };

                self.getInfo = function() {
                    self.getUrl();
                    self.getWeather();
                };

                self.getUrl = function(city) {
                    $.ajax({
                        url: "/World/GetImgURL?city=" + self.selectedCity(),
                        type: 'GET',
                        success: function (response) {
                            if (response === "null") {
                                self.cityImgURL(null);
                                self.error('This city have no image :(');
                            } else {
                                self.error('');
                                self.cityImgURL(response);
                            }
                        }
                    });
                }

                self.getWeather = function getWeather() {
                    $.ajax({
                        url:
                            'http://api.openweathermap.org/data/2.5/weather?q=' +
                            self.selectedCity() +
                            '&APPID=a431728ee71691e171014a5010f5a08e',
                        type: 'GET',
                        success: function (response) {
                            self.city(response.name);
                            self.temp(Math.round((response.main.temp - 273.15) * 10 / 10));
                            chooseImg();
                            self.wind(response.wind.speed);
                            self.pressure(Math.round(response.main.pressure * 0.75006));

                            self.weatherInfo('User city is: ' +
                                self.city() +
                                '.Temperature is ' +
                                self.temp() +
                                '*C. Wind is blowing with: ' + self.wind() +
                                'm/s. Pressure is ' +
                                self.pressure() +
                                ' H.g.');


                            function chooseImg() {
                                if (self.temp() > 0) {
                                    self.urlImage(
                                        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpCEdeB05tId7K1tx7EXYcm5uLc5s8DKbjO6Bh0ivIZw8jMstP');
                                } else {
                                    self.urlImage(
                                        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvXJv9FO4KUbP17XCQqRephcIjpCeFqojIQEWzbKVe7mMT5UfIAw');
                                }
                            }
                        },
                        error: function (jqXHR, exception) {
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Sorry.This city does not in base. [404]';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            self.error(msg);
                        }
                    });
                }
            };

            var vm = new CountriesViewModel();
            ko.applyBindings(vm);
        });
    </script>
}
