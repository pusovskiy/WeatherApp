@using Newtonsoft.Json
@model List<WeatherApp.ViewModels.UserViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>User list</h2>

<style>
    .selected {
        color: black;
        background-color: #235892;
    }
</style>

<table class="table col-md-10 table-bordered">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Surname</th>
            <th>Country</th>
            <th>City</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: jsonUsers">
    <tr data-bind="click: $root.chooseUser, css: { selected: $parent.chosenUser() && Id === $parent.chosenUser().Id }">
        <td data-bind="text: Id"></td>
        <td data-bind="text: Name"></td>
        <td data-bind="text: Surname"></td>
        <td data-bind="text: Country"></td>
        <td data-bind="text: City"></td>
    </tr>
  
    </tbody>
</table>


<div class="container-fluid">
    <div class="container">
        <div class="row">
            <div class="col-md-2"></div>
            <a class="btn btn-primary" id="deleteBtn" data-bind="attr:{ href: deleteUrl}">Delete User</a>
            <a class="offset-1 btn btn-primary" id="getWeather" href="#" data-bind="click: $root.getWeather">Get user weather</a>
            <a class="offset-1 btn btn-primary" id="makeAdminBtn" href="#">Make this user admin</a>
        </div>
    </div>
    
    <div id="success" style="margin-top: 15px; color:blue;font-style: italic"></div>
    <div id="error" style="color: red"></div>
</div>

@section scripts
{
    <script src="~/Scripts/knockout-3.5.0.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function() {
            function TableViewModel() {
                var self = this;
                self.chosenUser = ko.observable();
                self.jsonUsers = ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(Model)));
                self.deleteUrl = ko.observable('');
                self.getWeatherUrl = ko.observable('');

                self.chooseUser = function(user) {
                    self.chosenUser(user);
                    self.deleteUrl('/Admin/DeleteUser?id=' + self.chosenUser().Id);

                    self.getWeather = function() {
                        $.ajax({
                            url:
                                'http://api.openweathermap.org/data/2.5/weather?q=' + self.chosenUser().City +'&APPID=a431728ee71691e171014a5010f5a08e',
                            type: 'GET',
                            success: function(response) {
                                var tempInCel = (response.main.temp) - 273.15;
                                var tempInCelRounded = Math.round(tempInCel * 10) / 10;
                                var pressureInMmhg = Math.round(response.main.pressure * 0.75006);
                                $('#success').text('User city is: ' +
                                    response.name +
                                    '.Temperature is ' +
                                    tempInCelRounded +
                                    '*C. Wind blowing with: '+ response.wind.speed + 'm/s. Pressure is'+pressureInMmhg +' H.g.');
                            },
                            error: function(jqXHR, exception) {
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Sorry.This city does not in base. [404]';
                                } else if (jqXHR.status == 500) {
                                    msg = 'Internal Server Error [500].';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                $('#error').html(msg);
                            }
                        });
                    }
                };

                


            };

            var tableViewModel = new TableViewModel();
            ko.applyBindings(tableViewModel);
        });

    </script>
}
